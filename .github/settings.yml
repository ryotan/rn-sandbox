# ⚠️⚠️⚠️️ Unfortunately, some of these settings are not synced!!! ⚠️⚠️⚠️️

# These settings are synced to GitHub by https://probot.github.io/apps/settings/
repository:
  # See https://docs.github.com/ja/rest/repos/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: rn-sandbox

  # A short description of the repository that will show up on GitHub
  description: My sandbox application created with React Native and Expo.

  # A URL with more information about the repository
  #homepage: https://example.github.io/

  # ⚠️ Not working...
  # A comma-separated list of topics to set on the repository
  topics:
    - react-native
    - expo

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Can be `public` or `private`. If your organization is associated with an enterprise account using
  # GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be `internal`.
  # The visibility parameter overrides the private parameter when you use both along with the nebula-preview preview header
  visibility: public

  # ⚠️ Not working...
  # Specify which security and analysis features to enable or disable for the repository.
  security_and_analysis:
    # Use the status property to enable or disable GitHub Advanced Security for this repository.
    # For more information, see "About GitHub Advanced Security."
    advanced_security:
      status: enabled
    # Use the status property to enable or disable secret scanning for this repository.
    # For more information, see "About secret scanning."
    secret_scanning:
      status: enabled
    # Use the status property to enable or disable secret scanning push protection for this repository.
    # For more information, see "Protecting pushes with secret scanning."
    secret_scanning_push_protection:
      status: enabled

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to make this repo available as a template repository or `false` to prevent it.
  is_template: false

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge
  allow_auto_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to always allow a pull request head branch that is behind its base branch to be updated
  # even if it is not required to be up to date before merging, or false otherwise.
  allow_update_branch: true

  # The default value for a squash merge commit title:
  # - PR_TITLE - default to the pull request's title.
  # - COMMIT_OR_PR_TITLE - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
  squash_merge_commit_title: PR_TITLE

  # The default value for a squash merge commit message:
  # - PR_BODY - default to the pull request's body.
  # - COMMIT_MESSAGES - default to the branch's commit messages.
  # - BLANK - default to a blank commit message.
  squash_merge_commit_message: PR_BODY

  # Note: You cannot unarchive repositories through the API. `true` to archive this repository.
  archived: false

  # Either true to allow private forks, or false to prevent private forks.
  allow_forking: true

  # Either true to require contributors to sign off on web-based commits,
  # or false to not require contributors to sign off on web-based commits.
  web_commit_signoff_required: false

  # Whether discussions are enabled.
  has_discussions: true

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # ⚠️ Not working...
  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # ⚠️ Not working...
  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: Android
    color: a0cfa2
    description: Change files in Android project.
  - name: app
    color: 92ceee
    description: Add or update app feature.
  - name: BREAKING CHANGE
    color: 3f3f3f
    description: Breaking change!!!
  - name: bug
    color: ff9aa2
    description: A bug fix.
  - name: build
    color: b5ead7
    description: Change build configuration or CI.
  - name: chore
    color: ffeeb8
    description: Related to the maintenance or upkeep of a project.
  - name: dependencies
    color: eeeeee
    description: Bump dependency version.
  - name: duplicate
    color: eeeeee
    description: This issue or pull request already exists.
  - name: doc
    color: daf0ee
    description: Add or update document.
  - name: feature
    color: c3e8b5
    description: Introduce a new app feature.
  - name: enhancement
    color: c3e8b5
    description: Enhance a current app feature.
  - name: good first issue
    color: 9eabd6
    description: Good for newcomers.
  - name: help wanted
    color: dfc6de
    description: Extra attention is needed.
  - name: invalid
    color: eeeeee
    description: This doesn't seem right.
  - name: iOS
    color: f8d4ce
    description: Change files in Xcode project.
  - name: performance
    color: c3e8b5
    description: Improve performance.
  - name: question
    color: 9eabd6
    description: Further information is requested.
  - name: skip-release-note
    color: ffffff
    description: Prevent creating release note draft from pull request.
  - name: test
    color: daf0ee
    description: Update app tests or test configurations.
  - name: wontfix
    color: 3f3f3f
    description: This will not be worked on.
#  - name: first-timers-only
#    # include the old name to rename and existing label
#    old_name: Help Wanted

# Milestones: define milestones for Issues and Pull Requests
milestones: [ ]
# - title: milestone-title
#   description: milestone-description
#   # The state of the milestone. Either `open` or `closed`
#   state: open

# Collaborators: give specific users access to this repository.
# See https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator for available options
#collaborators: [ ]
#  - username: bkeepers
#    permission: push
#  - username: hubot
#    permission: pull

# Note: `permission` is only valid on organization-owned repositories.
# The permission to grant the collaborator. Can be one of:
# * `pull` - can pull, but not push to or administer this repository.
# * `push` - can pull and push, but not administer this repository.
# * `admin` - can pull, push and administer this repository.
# * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
# * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://developer.github.com/v3/teams/#add-or-update-team-repository for available options
#teams: [ ]
#  - name: core
#    # The permission to grant the team. Can be one of:
#    # * `pull` - can pull, but not push to or administer this repository.
#    # * `push` - can pull and push, but not administer this repository.
#    # * `admin` - can pull, push and administer this repository.
#    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#    permission: admin
#  - name: docs
#    permission: push

# ⚠️ Not working...
branches:
  - name: '*'
    # https://developer.github.com/v3/repos/branches/#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: false
        # Required. The list of status checks to require in order to merge into this branch
        contexts:
          - release-drafter
        # The list of status checks to require in order to merge into this branch
        checks:
          - context: release-drafter

      # Required. Enforce all configured restrictions for administrators.
      # Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true

      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews: null
      #  # The number of approvals required. (1-6)
      #  required_approving_review_count: 2
      #  # Dismiss approved reviews automatically when a new commit is pushed.
      #  dismiss_stale_reviews: false
      #  # Blocks merge until code owners have reviewed.
      #  require_code_owner_reviews: false
      #  # Allow specific users, teams, or apps to bypass pull request requirements.
      #  bypass_pull_request_allowances:
      #    users: [ ]
      #    teams: [ ]
      #    apps: [ ]
      #  # Specify which users and teams can dismiss pull request reviews.
      #  # Pass an empty dismissal_restrictions object to disable.
      #  # User and team dismissal_restrictions are only available for organization-owned repositories.
      #  # Omit this parameter for personal repositories.
      #  dismissal_restrictions:
      #    users: [ ]
      #    teams: [ ]

      # Required. Restrict who can push to this branch. Team and user restrictions are only available for
      # organization-owned repositories. Set to null to disable.
      restrictions:
        apps: [ ]
        users: [ ]
        teams: [ ]

      # Prevents merge commits from being pushed to matching branches. Set to false to disable.
      required_linear_history: true

      # Permits force pushes for all users with push access. Set to null to disable.
      allow_force_pushes: false

      # Allows users with push access to delete matching branches. Set to false to disable.
      allow_deletions: true

      # If set to true, the restrictions branch protection settings which limits who can push will also block pushes
      # which create new branches, unless the push is initiated by a user, team, or app which has the ability to push.
      # Set to true to restrict new branch creation. Default: false.
      block_creations: false

      # When enabled, all conversations on code must be resolved before a pull request can be merged.
      required_conversation_resolution: true

      # Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
      # Default: false.
      lock_branch: false

      # Commits pushed to matching branches must have verified signatures. Set to false to disable.
      required_signatures: false
